(()=>{"use strict";const e=(()=>{const e=()=>JSON.parse(localStorage.getItem("projects")||"[]"),t=t=>{const a=e(),n=a.find((e=>e.id==t.id));n?(n.projectName=t.projectName,n.tasks=t.tasks):(t.id=Math.floor(1e6*Math.random()),a.push(t)),localStorage.setItem("projects",JSON.stringify(a))};return{getProjects:e,getTasks:t=>e().find((e=>e.id==t)).tasks,saveProject:t,deleteProject:t=>{const a=e().filter((e=>e.id!=t));localStorage.setItem("projects",JSON.stringify(a))},deleteTask:(a,n)=>{const o=e().find((e=>e.id==a)),r=o.tasks.filter((e=>e.taskId!=n));o.tasks=r,t(o)},findTaskToUpdate:(t,a)=>e().find((e=>e.id==t)).tasks.find((e=>e.taskId==a)),updateTask:(t,a)=>{const n=e(),o=n.find((e=>e.id==t)),r=o.tasks,s=r.findIndex((e=>e.taskId==a.taskId));r[s]=a,o.tasks=r,localStorage.setItem("projects",JSON.stringify(n))}}})(),t=(()=>{const t=()=>{const t=e.getProjects();a(t)},a=e=>{c(e)},n=e=>{d(e)},r=()=>{document.querySelector("#writing-area").querySelectorAll(".project").forEach((e=>e.remove()))};return{onProjectSelect:t=>{const a=e.getProjects().find((e=>e.id==t)),o=document.querySelector(`[data-project-id='${a.id}']`);n(o)},onProjectAdd:a=>{const o={projectName:a,tasks:[]};e.saveProject(o),t();const r=document.querySelector(`[data-project-id='${o.id}']`);n(r)},onProjectNameEdit:(a,n,o=e.getTasks(a))=>{e.saveProject({id:a,projectName:n,tasks:o}),t()},onTaskAdd:(t,a)=>{const n={item:t,taskId:Math.floor(1e6*Math.random()),priority:"low",dueDate:null,isComplete:!1},o=e.getProjects().find((e=>e.id==a));return o.tasks.push(n),e.saveProject(o),n},onTaskNameEdit:(t,a,n)=>{const o=e.findTaskToUpdate(t,a);e.updateTask(t,{item:n,taskId:o.taskId,priority:o.priority,dueDate:o.dueDate,isComplete:o.isComplete})},onTaskPriorityEdit:(t,a,n)=>{const o=e.findTaskToUpdate(t,a);e.updateTask(t,{item:o.item,taskId:o.taskId,priority:n,dueDate:o.dueDate,isComplete:o.isComplete})},onTaskDueDateEdit:(t,a,n)=>{const o=e.findTaskToUpdate(t,a);e.updateTask(t,{item:o.item,taskId:o.taskId,priority:o.priority,dueDate:n,isComplete:o.isComplete})},onTaskCompleteEdit:(t,a,n)=>{const o=e.findTaskToUpdate(t,a);e.updateTask(t,{item:o.item,taskId:o.taskId,priority:o.priority,dueDate:o.dueDate,isComplete:n})},onHomeTabSelect:(e,t)=>{(e=>{r();const t=document.querySelector(".notepad");e.forEach((e=>{o(e.id);const a=e.tasks,n=t.querySelector(`[data-project-id="${e.id}"]`),r=n.querySelector("ul"),s=n.querySelector(".add-task");a.forEach((e=>{const t=i(e);r.insertBefore(t,s.parentElement)}))}))})(e),d(t)}}})(),a=()=>({createListElement:e=>{const t=document.createElement("li");return t.setAttribute("class",e),t},createSpanElement:e=>{const t=document.createElement("span");return t.classList.add(e),t},createImageElement:(e,t)=>{const a=document.createElement("img");return a.classList.add(t),a.setAttribute("src",e),a.setAttribute("draggable","false"),a},createInputField:e=>{const t=document.createElement("input");return t.setAttribute("type","text"),t.setAttribute("placeholder",e),t.setAttribute("id","user-input"),t.required=!0,t},createForm:()=>document.createElement("form"),createDiv:e=>{const t=document.createElement("div");return t.setAttribute("class",e),t}}),n=()=>{const e=a(),t=e.createSpanElement("icons"),n=e.createImageElement("images/edit-icon.svg","edit-icon"),o=e.createImageElement("images/delete-icon.svg","delete-icon");return n.classList.add("edit-project"),o.classList.add("delete-project"),t.append(n,o),t},o=t=>{const n=a(),o=e.getProjects().find((e=>e.id==t)).projectName,r=document.querySelector("#writing-area"),s=n.createDiv("project");s.setAttribute("data-project-id",t);const c=n.createDiv("skip-line"),i=n.createDiv("project-heading"),d=document.createElement("h2");d.setAttribute("class","notepad-text"),d.textContent=o;const l=document.createElement("h3");l.setAttribute("class","notepad-text"),l.textContent="Due Date";const m=document.createElement("ul");m.classList.add("notepad-text","todos");const p=n.createListElement("task"),u=n.createSpanElement("add-task"),E=n.createImageElement("images/add-icon.svg","add-icon");u.append(E,"Add Task"),p.append(u),m.append(p,c),i.append(d,l),s.append(i,m),r.append(s)},r=()=>{const e=a().createSpanElement("due-date"),n=a().createImageElement("images/priority-icon.svg","priority-icon");n.classList.add("priority-low");const o=document.createElement("label");o.classList.add("date-label");const r=document.createElement("input");r.setAttribute("type","date"),r.required=!0;const s=a().createImageElement("images/calendar-icon.svg","calendar-icon");return o.append(r,s),e.append(n,o),r.addEventListener("change",(()=>{const e=r.closest(".project").dataset.projectId,a=r.closest("[data-task-id]").dataset.taskId,n=r.value;return t.onTaskDueDateEdit(e,a,n)})),e},s=(e,t)=>{const o=a(),r=o.createListElement("project-item");r.setAttribute("data-project-id",e);const s=o.createSpanElement("project-name");s.textContent=t;const c=n();return r.append(s,c),r},c=e=>{const a=document.querySelector(".project-list"),n=document.querySelector("[data-add-project]");[].slice.call(a.children).forEach((e=>{e.classList.contains("project-item")&&e.remove()}));for(const t of e){const e=s(t.id,t.projectName);a.insertBefore(e,n)}a.querySelectorAll(".project-item").forEach((e=>{e.addEventListener("click",(()=>{t.onProjectSelect(e.dataset.projectId)}))}))},i=e=>{const t=a(),o=t.createListElement("task");o.setAttribute("data-task-id",e.taskId);const s=t.createSpanElement("task-item"),c=t.createSpanElement("task-text");c.textContent=e.item;const i=n();s.append(c,i);const d=r();return d.querySelector(".priority-icon").classList.add(`priority-${e.priority}`),d.querySelector("input").value=e.dueDate,e.isComplete&&o.classList.add("completed"),o.append(s,d),o},d=e=>{const t=document.querySelector(".active");t&&t.classList.remove("active"),e.classList.add("active"),e.children.item(0)},l=()=>null!=document.querySelector("#user-input"),m=()=>{const e=document.querySelector("#user-input"),t=e.parentElement.parentElement,n=a().createSpanElement("project-name"),o=e.value.trim();o&&(n.textContent=o,e.parentElement.remove(),t.insertBefore(n,t.childNodes[0]))},p=()=>{if(l())return;(()=>{const e=a(),t=document.querySelector(".project-list"),o=e.createListElement("project-item"),r=e.createForm(),s=e.createInputField("Project name...");r.append(s);const c=n();o.append(r,c),t.insertBefore(o,t.lastElementChild),setTimeout((()=>{s.focus()}),0)})();const e=document.querySelector("#user-input"),r=e.parentElement,s=r.parentElement;e.addEventListener("blur",(function(){if(""==e.value.trim())return void s.remove();m();const a=s.firstElementChild.textContent;t.onProjectAdd(a);const n=document.querySelector(".project-list"),r=n.children[n.childElementCount-2].getAttribute("data-project-id");l()||o(r)})),r.addEventListener("submit",(function(e){e.preventDefault(),m();const a=s.firstElementChild.textContent;t.onProjectAdd(a);const n=document.querySelector(".project-list"),r=n.children[n.childElementCount-2].getAttribute("data-project-id");l()||o(r)}))},u=()=>{const e=document.querySelector("#user-input"),t=e.parentElement,a=t.parentElement.parentElement;e.addEventListener("blur",(function(){const t=a.closest("[data-project-id]").dataset.projectId,n=e.value;k(),n&&E(n,t,a)})),t.addEventListener("submit",(function(t){t.preventDefault();const n=a.closest("[data-project-id]").dataset.projectId,o=e.value;k(),o&&E(o,n,a)}))},E=(e,a,n)=>{if(n.dataset.taskId)return t.onTaskNameEdit(a,n.dataset.taskId,e);const o=t.onTaskAdd(e,a);n.setAttribute("data-task-id",o.taskId)},k=()=>{const e=document.querySelector("#user-input"),t=e.parentElement,n=t.parentElement,o=n.parentElement,r=e.value.trim(),s=a().createSpanElement("task-text");s.append(r),""!=r||o.dataset.taskId?""==r&&o.dataset.taskId||(t.remove(),n.prepend(s)):o.remove()};window.onload=()=>{const a=e.getProjects(),n=document.querySelector('[data-tab="home"]');c(a),t.onHomeTabSelect(a,n)},(()=>{const a=document.getElementById("bars-icon-mobile");window.innerWidth<=1024&&a.classList.contains("hidden")&&a.classList.toggle("hidden");const n=document.getElementById("sidebar"),o=()=>{n.classList.toggle("toggle-sidebar"),window.innerWidth<=1024&&a.classList.toggle("hidden")};document.querySelectorAll(".bars-icon").forEach((e=>{e.addEventListener("click",o)}));const r=n.querySelector('[data-tab="home"]');r.addEventListener("click",(()=>{const a=e.getProjects();t.onHomeTabSelect(a,r)}))})(),document.querySelector(".project-list").addEventListener("click",(t=>{if(t.target.closest(".delete-project")){if(!confirm("Are you sure you want to delete this project and all its tasks? This action cannot be undone."))return;const a=t.target.closest("[data-project-id]").dataset.projectId;document.querySelectorAll(`[data-project-id="${a}"]`).forEach((e=>e.remove())),e.deleteProject(a)}})),document.querySelector("[data-add-project]").addEventListener("click",p),document.querySelector(".project-list").addEventListener("click",(e=>{e.target.classList.contains("edit-project")&&(e=>{if(l())return;const n=a().createForm(),o=a().createInputField("Project name..."),r=e.target.parentElement.previousElementSibling;o.value=r.textContent,r.remove(),n.append(o);const s=e.target.closest(".project-item");s.insertBefore(n,s.childNodes[0]);const c=document.querySelector("#user-input");c.focus();const i=s.dataset.projectId;c.addEventListener("blur",(function(){""!=c.value&&m();const e=s.firstElementChild.textContent;d(i,e),t.onProjectNameEdit(i,e)})),n.addEventListener("submit",(function(e){e.preventDefault(),m();const a=s.firstElementChild.textContent;d(i,a),t.onProjectNameEdit(i,a)}));const d=(e,t)=>{const a=document.querySelector(".notepad").querySelector(`[data-project-id="${e}"]`);a&&(a.childNodes[0].childNodes[0].textContent=t)}})(e)})),document.querySelector(".notepad").addEventListener("click",(n=>{var o,s;n.target.classList.contains("task-text")?(e=>{e.classList.toggle("completed");let a=!1;e.classList.contains("completed")&&(a=!0);const n=e.closest(".project").dataset.projectId,o=e.dataset.taskId;t.onTaskCompleteEdit(n,o,a)})(n.target.closest(".task")):n.target.classList.contains("add-task")?((e=>{if(document.getElementById("user-input"))return;const t=a().createListElement("task"),n=a().createSpanElement("task-item"),o=a().createForm(),s=a().createInputField("Enter Task...");o.append(s),n.append(o);const c=a().createSpanElement("icons"),i=a().createImageElement("images/edit-icon.svg","edit-icon"),d=a().createImageElement("images/delete-icon.svg","delete-icon");c.append(i,d),n.append(c);const l=r();t.append(n,l);const m=e.closest(".todos"),p=m.childElementCount-2;m.insertBefore(t,m.children[p]),setTimeout((()=>{s.focus()}),0)})(n.target),u()):n.target.classList.contains("priority-icon")?(e=>{if(e.parentElement.parentElement.classList.contains("completed"))return;const a=e.closest(".project").dataset.projectId,n=e.closest("[data-task-id]").dataset.taskId,o=e.classList;o.contains("priority-low")?(o.remove("priority-low"),o.add("priority-medium"),t.onTaskPriorityEdit(a,n,"medium")):o.contains("priority-medium")?(o.remove("priority-medium"),o.add("priority-high"),t.onTaskPriorityEdit(a,n,"high")):o.contains("priority-high")&&(o.remove("priority-high"),o.add("priority-low"),t.onTaskPriorityEdit(a,n,"low"))})(n.target):n.target.classList.contains("edit-icon")?(e=>{if(e.classList.contains("completed"))return;const t=e.querySelector(".task-text"),n=t.textContent;t.remove();const o=a().createForm(),r=a().createInputField("Enter Task...");r.value=n,o.append(r);const s=e.querySelector(".task-item"),c=e.querySelector(".icons");s.insertBefore(o,c),e.prepend(s),r.focus(),u()})(n.target.closest(".task")):n.target.classList.contains("delete-icon")&&(o=n.target.closest("[data-project-id]").dataset.projectId,s=n.target.closest("[data-task-id]").dataset.taskId,document.querySelector(`[data-task-id="${s}"]`).remove(),e.deleteTask(o,s))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,