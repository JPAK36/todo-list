(()=>{"use strict";const e=(()=>{const e=()=>JSON.parse(localStorage.getItem("projects")||"[]"),t=t=>{const n=e(),r=n.find((e=>e.id==t.id));r?(r.projectName=t.projectName,r.tasks=t.tasks):(t.id=Math.floor(1e6*Math.random()),n.push(t)),localStorage.setItem("projects",JSON.stringify(n))};return{getProjects:e,getTasks:t=>e().find((e=>e.id==t)).tasks,saveProject:t,deleteProject:t=>{const n=e().filter((e=>e.id!=t));localStorage.setItem("projects",JSON.stringify(n))},deleteTask:(n,r)=>{const c=e().find((e=>e.id==n)),o=c.tasks.filter((e=>e.taskId!=r));c.tasks=o,t(c)}}})(),t=(()=>{const t=()=>{const t=e.getProjects();n(t)},n=e=>{a(e)},r=e=>{s(e)};return{onProjectSelect:t=>{const n=e.getProjects().find((e=>e.id==t)),c=document.querySelector(`[data-project-id='${n.id}']`);r(c)},onProjectAdd:n=>{const c={projectName:n,tasks:[]};e.saveProject(c),t();const o=document.querySelector(`[data-project-id='${c.id}']`);r(o)},onProjectNameEdit:(n,r,c=e.getTasks(n))=>{e.saveProject({id:n,projectName:r,tasks:c}),t()},onTaskAdd:(t,n)=>{const r={item:t,taskId:Math.floor(1e6*Math.random()),priority:"low",dueDate:null,isComplete:!1},c=e.getProjects().find((e=>e.id==n));return c.tasks.push(r),e.saveProject(c),r}}})(),n=()=>({createListElement:e=>{const t=document.createElement("li");return t.setAttribute("class",e),t},createSpanElement:e=>{const t=document.createElement("span");return t.classList.add(e),t},createImageElement:(e,t)=>{const n=document.createElement("img");return n.classList.add(t),n.setAttribute("src",e),n.setAttribute("draggable","false"),n},createInputField:e=>{const t=document.createElement("input");return t.setAttribute("type","text"),t.setAttribute("placeholder",e),t.setAttribute("id","user-input"),t.required=!0,t},createForm:()=>document.createElement("form"),createDiv:e=>{const t=document.createElement("div");return t.setAttribute("class",e),t}}),r=()=>{const e=n(),t=e.createSpanElement("icons"),r=e.createImageElement("images/edit-icon.svg","edit-icon"),c=e.createImageElement("images/delete-icon.svg","delete-icon");return r.classList.add("edit-project"),c.classList.add("delete-project"),t.append(r,c),t},c=e=>{const t=n(),r=document.querySelector(".project-list"),c=r.childElementCount-2,o=r.children[c].textContent,a=document.querySelector("#writing-area"),s=t.createDiv("project");s.setAttribute("data-project-id",e);const i=t.createDiv("skip-line"),d=t.createDiv("project-heading"),l=document.createElement("h2");l.setAttribute("class","notepad-text"),l.textContent=o;const m=document.createElement("h3");m.setAttribute("class","notepad-text"),m.textContent="Due Date";const p=document.createElement("ul");p.classList.add("notepad-text","todos");const u=t.createListElement("task"),E=t.createSpanElement("add-task"),g=t.createImageElement("images/add-icon.svg","add-icon");E.append(g,"Add Task"),u.append(E),p.append(u,i),d.append(l,m),s.append(d,p),a.append(s)},o=(e,t)=>{const c=n(),o=c.createListElement("project-item");o.setAttribute("data-project-id",e);const a=c.createSpanElement("project-name");a.textContent=t;const s=r();return o.append(a,s),o},a=e=>{const n=document.querySelector(".project-list"),r=document.querySelector("[data-add-project]");[].slice.call(n.children).forEach((e=>{e.classList.contains("project-item")&&e.remove()}));for(const t of e){const e=o(t.id,t.projectName);n.insertBefore(e,r)}n.querySelectorAll(".project-item").forEach((e=>{e.addEventListener("click",(()=>{t.onProjectSelect(e.dataset.projectId)}))}))},s=e=>{const t=document.querySelector(".active");t&&t.classList.remove("active"),e.classList.add("active"),e.children.item(0)},i=()=>null!=document.querySelector("#user-input"),d=()=>{const e=document.querySelector("#user-input"),t=e.parentElement.parentElement,r=n().createSpanElement("project-name"),c=e.value.trim();c&&(r.textContent=c,e.parentElement.remove(),t.insertBefore(r,t.childNodes[0]))},l=()=>{if(i())return;(()=>{const e=n(),t=document.querySelector(".project-list"),c=e.createListElement("project-item"),o=e.createForm(),a=e.createInputField("Project name...");o.append(a);const s=r();c.append(o,s),t.insertBefore(c,t.lastElementChild),setTimeout((()=>{a.focus()}),0)})();const e=document.querySelector("#user-input"),o=e.parentElement,a=o.parentElement;e.addEventListener("blur",(function(){if(""==e.value.trim())return void a.remove();d();const n=a.firstElementChild.textContent;t.onProjectAdd(n);const r=document.querySelector(".project-list"),o=r.children[r.childElementCount-2].getAttribute("data-project-id");i()||c(o)})),o.addEventListener("submit",(function(e){e.preventDefault(),d();const n=a.firstElementChild.textContent;t.onProjectAdd(n);const r=document.querySelector(".project-list"),o=r.children[r.childElementCount-2].getAttribute("data-project-id");i()||c(o)}))},m=()=>{const e=document.querySelector("#user-input"),t=e.parentElement,n=t.parentElement.parentElement;e.addEventListener("blur",(function(t){const r=t.target.closest("[data-project-id]").dataset.projectId,c=e.value;u(),c&&p(c,r,n)})),t.addEventListener("submit",(function(t){t.preventDefault();const r=t.target.closest("[data-project-id]").dataset.projectId,c=e.value;u(),c&&p(c,r,n)}))},p=(e,n,r)=>{const c=t.onTaskAdd(e,n);r.setAttribute("data-task-id",c.taskId)},u=()=>{const e=document.querySelector("#user-input"),t=e.parentElement,r=t.parentElement,c=r.parentElement,o=e.value.trim(),a=n().createSpanElement("task-text");a.append(o),""!=o?(t.remove(),r.prepend(a)):c.remove()};window.onload=()=>{const t=e.getProjects();a(t)},(()=>{const e=document.getElementById("bars-icon-mobile");window.innerWidth<=1024&&e.classList.contains("hidden")&&e.classList.toggle("hidden");const t=document.getElementById("sidebar"),n=()=>{t.classList.toggle("toggle-sidebar"),window.innerWidth<=1024&&e.classList.toggle("hidden")};document.querySelectorAll(".bars-icon").forEach((e=>{e.addEventListener("click",n)}))})(),document.addEventListener("click",(t=>{if(t.target.closest(".delete-project")){const n=t.target.closest(".project-item");n.remove();const r=n.dataset.projectId;e.deleteProject(r)}})),document.querySelector("[data-add-project]").addEventListener("click",l),document.addEventListener("click",(e=>{e.target.classList.contains("edit-project")&&(e=>{if(i())return;const r=n().createForm(),c=n().createInputField("Project name..."),o=e.target.parentElement.previousElementSibling;c.value=o.textContent,o.remove(),r.append(c);const a=e.target.closest(".project-item");a.insertBefore(r,a.childNodes[0]);const s=document.querySelector("#user-input"),l=a.dataset.projectId;s.addEventListener("blur",(function(){""!=s.value&&d();const e=a.firstElementChild.textContent;t.onProjectNameEdit(l,e)})),r.addEventListener("submit",(function(e){e.preventDefault(),d();const n=a.firstElementChild.textContent;t.onProjectNameEdit(l,n)}))})(e)})),document.addEventListener("click",(t=>{t.target.classList.contains("task-item")&&t.target.parentElement.classList.toggle("completed"),t.target.classList.contains("add-task")&&((t=>{if(document.getElementById("user-input"))return;const r=n().createListElement("task"),c=n().createSpanElement("task-item"),o=n().createForm(),a=n().createInputField("Enter Task...");o.append(a),c.append(o);const s=n().createSpanElement("icons"),i=n().createImageElement("images/edit-icon.svg","edit-icon"),d=n().createImageElement("images/delete-icon.svg","delete-icon");i.addEventListener("click",(()=>{if(r.classList.contains("completed"))return;const e=document.querySelector(".task-text"),t=e.textContent;e.remove();const o=n().createForm(),a=n().createInputField("Enter Task...");a.value=t,o.append(a),c.insertBefore(o,s),r.prepend(c),m()})),d.addEventListener("click",(t=>{const n=t.target.closest("[data-project-id]").dataset.projectId,c=t.target.closest("[data-task-id]").dataset.taskId;r.remove(),e.deleteTask(n,c)})),s.append(i,d),c.append(s);const l=(()=>{const e=n().createSpanElement("due-date"),t=n().createImageElement("images/priority-icon.svg","priority-icon");t.classList.add("priority-low");const r=document.createElement("label");r.classList.add("date-label");const c=document.createElement("input");c.setAttribute("type","date"),c.required=!0;const o=n().createImageElement("images/calendar-icon.svg","calendar-icon");return r.append(c,o),e.append(t,r),e})();r.append(c,l);const p=t.closest(".todos"),u=p.childElementCount-2;p.insertBefore(r,p.children[u]),setTimeout((()=>{a.focus()}),0)})(t.target),m()),t.target.classList.contains("priority-icon")&&(e=>{if(e.parentElement.parentElement.classList.contains("completed"))return;const t=e.classList;t.contains("priority-low")?(t.remove("priority-low"),t.add("priority-medium")):t.contains("priority-medium")?(t.remove("priority-medium"),t.add("priority-high")):t.contains("priority-high")&&(t.remove("priority-high"),t.add("priority-low"))})(t.target)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,