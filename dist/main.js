(()=>{"use strict";const e=()=>{const e=document.createElement("li");return e.setAttribute("class","project-item"),e},t=e=>{const t=document.createElement("span");return t.classList.add(e),t},n=(e,t)=>{const n=document.createElement("img");return n.classList.add(t),n.setAttribute("src",e),n.setAttribute("draggable","false"),n},c=e=>{const t=document.createElement("input");return t.setAttribute("type","text"),t.setAttribute("placeholder",e),t.setAttribute("id","user-input"),t.required=!0,t},s=()=>document.createElement("form"),r=()=>null!=document.querySelector("#user-input"),o=()=>{const e=document.querySelector("#user-input"),n=e.parentElement,c=n.parentElement,s=t("project-name");n.addEventListener("submit",(function(t){t.preventDefault();const n=e.value;if(n.match(/^[\s]/))return alert("Project name cannot start with a space");s.textContent=n,e.parentElement.remove(),c.insertBefore(s,c.childNodes[0])}))},i=()=>{r()||((()=>{const r=document.querySelector(".project-list"),o=e(),i=s(),a=c("Project name...");i.append(a);const d=t("icons"),l=n("images/edit-icon.svg","edit-icon"),m=n("images/delete-icon.svg","delete-icon");d.append(l,m),o.append(i,d),r.insertBefore(o,r.lastElementChild)})(),o())};(()=>{const e=document.getElementById("bars-icon-mobile");screen.width<=1024&&e.classList.contains("hidden")&&e.classList.toggle("hidden");const t=document.getElementById("sidebar"),n=()=>{t.classList.toggle("toggle-sidebar"),screen.width<=1024&&e.classList.toggle("hidden")};document.querySelectorAll(".bars-icon").forEach((e=>{e.addEventListener("click",n)}))})(),document.addEventListener("click",(e=>{e.target.closest(".delete-icon")&&e.target.closest(".project-item").remove()})),document.querySelector("[data-add-project]").addEventListener("click",i),document.addEventListener("click",(e=>{"edit-icon"===e.target.className&&(e=>{if(r())return;const t=s(),n=c("Project name..."),i=e.target.parentElement.previousElementSibling;n.value=i.textContent,i.remove(),t.append(n);const a=e.target.closest(".project-item");a.insertBefore(t,a.childNodes[0]),o()})(e)})),document.addEventListener("click",(e=>{if(e.target.classList.contains("task-item")){(e=>{e.classList.toggle("completed")})(e.target.parentElement)}}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,