(()=>{"use strict";const e=()=>{let e=!0;const t=(()=>{const e=()=>document.createElement("li"),t=e=>{const t=document.createElement("span");return t.classList.add(e),t},n=(e,t)=>{const n=document.createElement("img");return n.classList.add(t),n.setAttribute("src",e),n},c=()=>{const e=document.createElement("input");return e.setAttribute("type","text"),e.setAttribute("placeholder","Project name..."),e.setAttribute("id","user-input"),e.required=!0,e},r=()=>document.createElement("form"),o=document.querySelector(".project-list"),s=e(),i=r(),a=c();i.append(a);const d=t("icons"),l=n("images/edit-icon.svg","edit-icon"),u=n("images/delete-icon.svg","delete-icon");return d.append(l,u),s.append(i,d),o.insertBefore(s,o.lastElementChild),{newProject:e=>{const n=t("project-name");return n.textContent=e,n},projectNameInput:a,projectInputForm:i,iconSpan:d,projectListElement:s}})();t.projectInputForm.addEventListener("submit",(function(n){n.preventDefault();const c=t.projectNameInput.value;return c.match(/^[\s]/)?alert("Project name cannot start with a space"):(t.projectInputForm.remove(),t.projectListElement.insertBefore(t.newProject(c),t.iconSpan),e=!1)}))};(()=>{const t=document.getElementById("bars-icon-mobile");screen.width<=1024&&t.classList.contains("hidden")&&t.classList.toggle("hidden");const n=document.getElementById("sidebar"),c=()=>{n.classList.toggle("toggle-sidebar"),screen.width<=1024&&t.classList.toggle("hidden")};document.querySelectorAll(".bars-icon").forEach((e=>{e.addEventListener("click",c)})),document.querySelector("[data-add-project]").addEventListener("click",e)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,