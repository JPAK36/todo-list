(()=>{"use strict";const e=e=>{const t=document.createElement("li");return t.setAttribute("class",e),t},t=e=>{const t=document.createElement("span");return t.classList.add(e),t},n=(e,t)=>{const n=document.createElement("img");return n.classList.add(t),n.setAttribute("src",e),n.setAttribute("draggable","false"),n},s=e=>{const t=document.createElement("input");return t.setAttribute("type","text"),t.setAttribute("placeholder",e),t.setAttribute("id","user-input"),t.required=!0,t},c=()=>document.createElement("form"),o=e=>{const t=document.createElement("div");return t.setAttribute("class",e),t},r=()=>null!=document.querySelector("#user-input"),a=()=>{const e=document.querySelector("#user-input"),n=e.parentElement.parentElement,s=t("project-name"),c=document.querySelector("#user-input").value;if(c.match(/^[\s]/))return alert("Project name cannot start with a space");s.textContent=c,e.parentElement.remove(),n.insertBefore(s,n.childNodes[0])},d=()=>{r()||((()=>{const o=document.querySelector(".project-list"),r=e("project-item"),a=c(),d=s("Project name...");a.append(d);const i=t("icons"),l=n("images/edit-icon.svg","edit-icon"),u=n("images/delete-icon.svg","delete-icon");l.classList.add("edit-project"),u.classList.add("delete-project"),i.append(l,u),r.append(a,i),o.insertBefore(r,o.lastElementChild)})(),document.querySelector("#user-input").parentElement.addEventListener("submit",(function(s){s.preventDefault(),a(),r()||(()=>{const s=document.querySelector(".project-list"),c=s.childElementCount-2,r=s.children[c].textContent,a=document.querySelector("#writing-area"),d=o("project"),i=o("skip-line"),l=o("project-heading"),u=document.createElement("h2");u.setAttribute("class","notepad-text"),u.textContent=r;const m=document.createElement("h3");m.setAttribute("class","notepad-text"),m.textContent="Due Date";const p=document.createElement("ul");p.classList.add("notepad-text","todos");const g=e("task"),E=t("add-task"),v=n("images/add-icon.svg","add-icon");E.append(v,"Add Task"),g.append(E),p.append(g),l.append(u,m),d.append(l,p),a.append(d,i)})()})))};(()=>{const e=document.getElementById("bars-icon-mobile");screen.width<=1024&&e.classList.contains("hidden")&&e.classList.toggle("hidden");const t=document.getElementById("sidebar"),n=()=>{t.classList.toggle("toggle-sidebar"),screen.width<=1024&&e.classList.toggle("hidden")};document.querySelectorAll(".bars-icon").forEach((e=>{e.addEventListener("click",n)}))})(),document.addEventListener("click",(e=>{e.target.closest(".delete-project")&&e.target.closest(".project-item").remove()})),document.querySelector("[data-add-project]").addEventListener("click",d),document.addEventListener("click",(e=>{e.target.classList.contains("edit-project")&&(e=>{if(r())return;const t=c(),n=s("Project name..."),o=e.target.parentElement.previousElementSibling;n.value=o.textContent,o.remove(),t.append(n);const d=e.target.closest(".project-item");d.insertBefore(t,d.childNodes[0]),t.addEventListener("submit",(function(e){e.preventDefault(),a()}))})(e)})),document.addEventListener("click",(e=>{e.target.classList.contains("task-item")&&e.target.parentElement.classList.toggle("completed")})),document.addEventListener("click",(e=>{e.target.classList.contains("add-task")&&(console.log("add task"),(()=>{const e=t("task-item");e.textContent="user input";const s=t("icons"),c=n("images/edit-icon.svg","edit-icon"),o=n("images/delete-icon.svg","delete-icon");s.append(c,o),e.append(s)})())}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,