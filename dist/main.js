(()=>{"use strict";const e=e=>{const t=document.createElement("li");return t.setAttribute("class",e),t},t=e=>{const t=document.createElement("span");return t.classList.add(e),t},n=(e,t)=>{const n=document.createElement("img");return n.classList.add(t),n.setAttribute("src",e),n.setAttribute("draggable","false"),n},s=e=>{const t=document.createElement("input");return t.setAttribute("type","text"),t.setAttribute("placeholder",e),t.setAttribute("id","user-input"),t.required=!0,t},c=()=>document.createElement("form"),r=e=>{const t=document.createElement("div");return t.setAttribute("class",e),t},o=()=>null!=document.querySelector("#user-input"),a=()=>{const e=document.querySelector("#user-input"),n=e.parentElement,s=n.parentElement,c=t("project-name");n.addEventListener("submit",(function(t){t.preventDefault();const n=e.value;if(n.match(/^[\s]/))return alert("Project name cannot start with a space");c.textContent=n,e.parentElement.remove(),s.insertBefore(c,s.childNodes[0]),i(n)}))},i=e=>{const t=document.querySelector("#writing-area"),n=r("project"),s=r("skip-line"),c=r("project-heading"),o=document.createElement("h2");o.setAttribute("class","notepad-text"),o.textContent=e;const a=document.createElement("h3");a.setAttribute("class","notepad-text"),a.textContent="Due Date",c.append(o,a),n.append(c),t.append(n,s)},d=()=>{o()||((()=>{const r=document.querySelector(".project-list"),o=e("project-item"),a=c(),i=s("Project name...");a.append(i);const d=t("icons"),l=n("images/edit-icon.svg","edit-icon"),u=n("images/delete-icon.svg","delete-icon");l.classList.add("edit-project"),u.classList.add("delete-project"),d.append(l,u),o.append(a,d),r.insertBefore(o,r.lastElementChild)})(),a())};(()=>{const e=document.getElementById("bars-icon-mobile");screen.width<=1024&&e.classList.contains("hidden")&&e.classList.toggle("hidden");const t=document.getElementById("sidebar"),n=()=>{t.classList.toggle("toggle-sidebar"),screen.width<=1024&&e.classList.toggle("hidden")};document.querySelectorAll(".bars-icon").forEach((e=>{e.addEventListener("click",n)}))})(),document.addEventListener("click",(e=>{e.target.closest(".delete-project")&&e.target.closest(".project-item").remove()})),document.querySelector("[data-add-project]").addEventListener("click",d),document.addEventListener("click",(e=>{e.target.classList.contains("edit-project")&&(e=>{if(o())return;const t=c(),n=s("Project name..."),r=e.target.parentElement.previousElementSibling;n.value=r.textContent,r.remove(),t.append(n);const i=e.target.closest(".project-item");i.insertBefore(t,i.childNodes[0]),a()})(e)})),document.addEventListener("click",(e=>{e.target.classList.contains("task-item")&&e.target.parentElement.classList.toggle("completed")})),document.addEventListener("click",(e=>{e.target.classList.contains("add-task")&&(console.log("add task"),(()=>{const e=t("task-item");e.textContent="user input";const s=t("icons"),c=n("images/edit-icon.svg","edit-icon"),r=n("images/delete-icon.svg","delete-icon");s.append(c,r),e.append(s)})())}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,