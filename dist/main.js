(()=>{"use strict";const e=e=>{const t=document.createElement("li");return t.setAttribute("class",e),t},t=e=>{const t=document.createElement("span");return t.classList.add(e),t},n=(e,t)=>{const n=document.createElement("img");return n.classList.add(t),n.setAttribute("src",e),n.setAttribute("draggable","false"),n},c=e=>{const t=document.createElement("input");return t.setAttribute("type","text"),t.setAttribute("placeholder",e),t.setAttribute("id","user-input"),t.required=!0,t},s=()=>document.createElement("form"),r=e=>{const t=document.createElement("div");return t.setAttribute("class",e),t},o=()=>null!=document.querySelector("#user-input"),i=()=>{const e=document.querySelector("#user-input"),n=e.parentElement.parentElement,c=t("project-name"),s=document.querySelector("#user-input").value;if(s.match(/^[\s]/))return alert("Project name cannot start with a space");c.textContent=s,e.parentElement.remove(),n.insertBefore(c,n.childNodes[0])},a=()=>{o()||((()=>{const r=document.querySelector(".project-list"),o=e("project-item"),i=s(),a=c("Project name...");i.append(a);const d=t("icons"),l=n("images/edit-icon.svg","edit-icon"),u=n("images/delete-icon.svg","delete-icon");l.classList.add("edit-project"),u.classList.add("delete-project"),d.append(l,u),o.append(i,d),r.insertBefore(o,r.lastElementChild)})(),document.querySelector("#user-input").parentElement.addEventListener("submit",(function(e){e.preventDefault(),i(),o()||(()=>{const e=document.querySelector(".project-list"),t=e.childElementCount-2,n=e.children[t].textContent,c=document.querySelector("#writing-area"),s=r("project"),o=r("skip-line"),i=r("project-heading"),a=document.createElement("h2");a.setAttribute("class","notepad-text"),a.textContent=n;const d=document.createElement("h3");d.setAttribute("class","notepad-text"),d.textContent="Due Date",i.append(a,d),s.append(i),c.append(s,o)})()})))};(()=>{const e=document.getElementById("bars-icon-mobile");screen.width<=1024&&e.classList.contains("hidden")&&e.classList.toggle("hidden");const t=document.getElementById("sidebar"),n=()=>{t.classList.toggle("toggle-sidebar"),screen.width<=1024&&e.classList.toggle("hidden")};document.querySelectorAll(".bars-icon").forEach((e=>{e.addEventListener("click",n)}))})(),document.addEventListener("click",(e=>{e.target.closest(".delete-project")&&e.target.closest(".project-item").remove()})),document.querySelector("[data-add-project]").addEventListener("click",a),document.addEventListener("click",(e=>{e.target.classList.contains("edit-project")&&(e=>{if(o())return;const t=s(),n=c("Project name..."),r=e.target.parentElement.previousElementSibling;n.value=r.textContent,r.remove(),t.append(n);const a=e.target.closest(".project-item");a.insertBefore(t,a.childNodes[0]),t.addEventListener("submit",(function(e){e.preventDefault(),i()}))})(e)})),document.addEventListener("click",(e=>{e.target.classList.contains("task-item")&&e.target.parentElement.classList.toggle("completed")})),document.addEventListener("click",(e=>{e.target.classList.contains("add-task")&&(console.log("add task"),(()=>{const e=t("task-item");e.textContent="user input";const c=t("icons"),s=n("images/edit-icon.svg","edit-icon"),r=n("images/delete-icon.svg","delete-icon");c.append(s,r),e.append(c)})())}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,